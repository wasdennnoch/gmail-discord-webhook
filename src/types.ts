// Has to be a type, not an interface, because otherwise, for some reason, this can't be passed to hono
export type Env = {
    GOOGLE_CLIENT_ID: string;
    GOOGLE_CLIENT_SECRET: string;
    GOOGLE_OAUTH_REDIRECT_URL: string;
    PUBSUB_TOPIC_NAME: string;
    PUBSUB_SUBSCRIPTION_NAME: string;
    PUBSUB_JWT_EMAIL: string;

	KV_USER_SETTINGS: KVNamespace;
};

// https://cloud.google.com/pubsub/docs/reference/rest/v1/PubsubMessage
export interface PubsubMessage {
    message: {
        attributes: Record<string, string>;
        data: string;
        messageId: string;
        publishTime: string;
        orderingKey: string;
    };
    subscription: string;
}

// https://developers.google.com/gmail/api/guides/push#receiving_notifications
export interface PubsubGmailMessagePayload {
    emailAddress: string;
    historyId: string;
}

// https://developers.google.com/identity/openid-connect/openid-connect#exchangecode
export interface GoogleOAuthTokenExchangeResult {
    refresh_token?: string;
    access_token?: string;
    expires_in?: number;
    id_token?: string;
    scope?: string;
    token_type?: "Bearer";
}

// https://developers.google.com/identity/openid-connect/openid-connect#an-id-tokens-payload
export interface GoogleIdTokenPayload {
    email?: string;
    email_verified?: boolean;
    name?: string;
    family_name?: string;
    given_name?: string;
    picture?: string;
}

// Key: email
export interface KvUserSettings {
    profile: KvUserProfile;
    tokens: KvUserTokens;
    lastHistoryId: string;
    active: boolean;
}

export interface KvUserProfile {
    email: string;
    // TODO In case I decide to use the name and avatar for the webhook,
    //      I should regularly refresh this data instead of only updating
    //      it during manual user login.
    name: string;
    // TODO Use something like https://ui-avatars.com/ for null avatars?
    //      Or does Google already provide a URL to an autogenerated version
    //      in case no custom avatar is set?
    avatar: string | null;
}

export interface KvUserTokens {
    google: KvUserGoogleTokens;
}

export interface KvUserGoogleTokens {
    refreshToken: string;
    accessToken: string;
    expiresAt: number;
    scopes: string[];
}
